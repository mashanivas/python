def mysum(L):
   print(L)
   if not L:
      return 0
   else:
      return L[0] + mysum(L[1:])
mysum([1,2,3,4,5])
exit
phrase = "Giraffe Academy"
print(phrase)
phrase[0]
phrase[:1]
phrase[1:]
phrase[2:5]
phrase.index(G)
phrase.index("G")
len.phrase()
len(phrase())
phrase.replace("Gi","El")
len(phrase())
phrase[0]
phrase[1]
phrase[:]
phrase.index("y")
phrase.upper()
phrase.lower()
phrase.upper().isupper
phrase.upper().isupper()
phrase.lower().islower()
print(phrase + "is cool")
phrase.upper(3)
for phr in phrase:
  print(phr)
len(phrase())
print(len(phrase())
 
q
len(phrase())
print(len(phrase())
q
len.phrase
len(phrase)
phrase[3]
for p in phrase:
  print(p)
for p in phrase:
   phrase.index["p"]
'spam' * 34
'----' * 30
'@@@@' * 21
'a' * 21
'+' * 32
3*34
3%2
3-3
(3*3)+(34(34*2))
(3*3)+(34(34*2)))
3*2+4*3*(9*9)
3*4+5
3*(4+9)
3*4+9*3
3*4+9*-3
3*3+6*7/3
pi = 7/22
3*pi
my_num = 5
print(str(my_num))
print(my_num)
print("This is a number: " + my_num)
print("My number : " + str(my_num))
my_num = -5
abs_my_num)
abs(my_num)
pow(3,2)
pow(4,6)
pow(5,12)
max(2,34)
min(3,32)
my_num=3.2
round(my_num)
my_num=3.55
round(my_num)
from math import *
floor(3.7)
ceil(3.2)
sqrt(12)
sqrt(16)
sqrt(64)
from sys import *
sys
sys.
sys.*
dir()
dir()|more
dir()
num1 = input("Enter a number: ")
32
num2 = input("Enter 2nd number: ")
64
result = int(num1) + int(num2)
result
def add(num1, num2):
 return num1+ num2
add(32,33)
def add(n1, n2):
return (n1+n2)
def add(n1, n2):
   return (n1+n2)
add(3,2)
def add(n1,n2):
   n1 = input("Enter first no.: ")
   n2 = input("Enter 2nd: ")
   n3 = n1+n2
   return n3
add(3,2)
friends = ["Tom", "Mary", "Jim"]
friends[0]
for v in friends:
  print(v)
friends[1]
len.friends
len.friends()
friends
friends.append("Mohan")
friends
friends.insert(3,"Martha")
friends
friends.insert(0,"Jerry")
friends
friends.remove("Mohan")
friends
friends[-1]
friends[-2]
friends[1:]
friends[2:3]
friends.append("Jerry Well")
friends
lucky_numbers = range(10)
luckey_numbers
lucky_numbers
lucky_numbers.()
lucky_numbers.clear()
lucky_numbers = [4,2,4,5,6,7,8,9,10]
lucky_numbers
friends.extend(lucky_numbers)
friends
friends.clear()
friends
friends.pop()
friends.insert(1)
friends.append(1)
friends.append("Jerry")
friends
friends.index(1)
friends.index("Jerry")
friend.count("Jim")
friends.append("Jim")
friends.count("Jim")
friends
friends.append("Jim")
friends.count("Jim")
friends.sort()
friends
friends.remove(1)
friends.sort()
friends
friends2 = friends.copy()
friends2.copy()
friend = (1,2)
friend.append(1)
friend
def a:
day hi:
def hi():
  print("hi"
hi(hi)
def hi():
  print("hi")
hi()
def sayhi()
def hi():
  print("hi")
hi()
def hi(name):
  print("hi: " + name)
hi("mike")
hi("jim")
friends = ["Jim", "James", "Carl", "Max", "Cony"]
for index in range(len(friends)):
   print(friends[index])
friends.append("Moh", "John", "Parkash")
friends.update("Mohan")
friends.append("Mohan")
friends.append("
friends.append("John")
friends
for index in range(len(friends)):
  print(friends[index])
def raise_to_power(base_num, pow_num):
   result = 1
   for index in range(pow_num):
       result = result * base_num
   return result
def raise_to_power(base_num, pow_num):
result = 1
exit
monconv = {
 "Jan":"January",
 "Feb":"February
print(3**3)
print(3**3**3)
print(3**3**4)
number_grid = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
  [0]
]
print(number_grid[0,0])
print(number_grid[0][0])
for row in number_grid:
  for col in row:
    print(col)
vi lang.py
'-' * 32
squares = [1, 4, 9, 16, 25]
squares
squares[0]
squares[-1]
squares[-3:]
squares[:]
squares + [36, 49, 64, 81]
squares[-6]
squares[-6:]
squares = squares + [36, 49, 64, 81]
squares
squares[-6:]
squares[5] = 100
squares
squares.append(216)
squares
squares.append(3*4)
squares
letters = ['a', 'b', 'c', 'd']
letters
letters[2:3] = ['C', 'D']
letters
letters[2:3] = []
letters
len(letters)
len(squares)
x = [squares, letters]
x
x[0][1]
x[1][1]
x[1][4]
x[1][-1:]
x[0][1:]
num = [2, 3, 4, 5]
x.append(num)
x
x[2][2]
x
a, b = 0, 1
while a < 10:
  print(a)
  a, b = b, a+b
def fib(x, y):
  a, b = x, y
  while a < 10
def fib(x, y):
   a, b = x, y
   while a < 10:
      print(a)
      a, b = b, a+b
fib(0,1)
a, b = 0, 1
while a < 10:
   print(a)
   a, b = b, a+b
a, b = 0, 1
while a < 100:
    print(a)
    a, b = b, a+b
a, b = 0, 1
while a < 1000:
  print(a, end=',')
  a, b = b, a+b
x = int(input("Please enter an integer: "))
42
x
if x < 0:
  x = 0
  print('Negative changed to zero')
elif x == 0:
  print('Zero')
elif x == 1:
  print('Single')
else:
  print("More....and value is" + str(x))
x
letters
for l in letters:
  print(l, len(l))
s = 'I am doing good'
for c in s:
   print(c, len(s))
s = [i am doing great]
s = ["timothy", "benjamin", "luke"]
for c in s:
  print(s, len(s))
for c in s:
  print(c, lenc())
s
for c in s:
   print(c, len(c))
range(0,10,3)
r = range(0, 10, 3)
r
range(0, 10, 3)
range(-10, -100, -30)
a = ['Mary', 'had', 'a', 'little', 'lamb']
for i in range(len(a)):
    print(i, a[i])
a.append('little')
a.append('lamb')
a
for i in range(len(a)):
   print(i, a[i])
sum(range(4))
sum(range(4,33))
list(range(0,10,3))
list(range(a,z))
list(range(0,30,5))
for n in range(2, 10):
  for x in range(2, n):
     if n % 2 == 0:
       print(n, 'equals', x '*', n//x)
for n in range(2, 10):
    for x in range (2, n):
      if n % x == 0:
        print(n, 'equals', x, '*', n//x)
        break
     else:
for n in range(2, 10):
  for x in range(2, n):
    if n % x == 0:
       print(n, 'equals', x, '*', n//x)
       break
  else:
    print(n, 'is a prime number')
for num in range(2, 10):
  if num % 2 == 0:
    print("Found an even number: ")
  else:
    print("Found a number", num)
for num in range(1, 30):
   if num % 2 == 0:
     print("Found an even number", num)
     continue
   print("Found a number: ", num)
for num in range(1, 30, 5):
  if num % 2 == 0:
     print("Found an even number", num)
     continue
  print("Found a number: ", num)
for num in range(1, 25):
   if num % 2 == 0:
     print("Found a even number", num)
     break
   print("Found a number: ", num)
while true:
   pass
while True:
   pass
while True:
   pass
5*5
while True:
    pass
 A=500
while True:
pass
while True
while true:
   pass
a=400
while True:
  pass
class MyEmptyClass:
  pass
MyEmptyClass
def initlog(*args)
def initlog(*args):
   pass
initlog
def fib(n):
  """Print a Fibonacci series up to n."""
a, b = 0, 1
def fib(n):
  a, b = 0, 1
  while a < n:
    print(a, end=' ')
    a, b = b, a+b
  print()
fib(10)
fib(30)
def fib1(n):
   a, b = 0, 1
   while a < n:
     print(a, end=' ')
   print()
fib1(40)
fib1()
fib1
print(fib1())
fib1
def fib2(n):
   a, b = 0, 1
   while a < n:
      print(a, end=' ')
      a, b = b, a+b
   print()
fib2(50)
fib2(666)
fib2
f = fib2
f
f(444)
def mul(a, b):
   print(a * b)
mu
mul
mul(34, 34)
m = mul
m(33,33)
m(2,10)
def f(3):
def f(n):
  c = 1
  for n1 in n:
     c *= n1
  return c
f(10)
def f(n):
  c = 1
  for n1 in range(n):
     c *= n1
  return c
f(10)
n = 20
for n1 in range(n):
   print(n1)
sum = 0
for n1 in range(n):
   sum += n1
print(sum)
for n1 in range(n):
  sum += n1
def fib2(n):
  result = []
  a, b = 0, 1
  while a < n:
     result.append[a]
     a, b = b, a+b
  return result
fib2(30)
def fib2(n):
    result = []
    a, b = 0, 1
    while a < n:
         result.append(a)
         a, b = b, a+b
    return result
fib2(49)
n1 = fib2(55)
n1
n2 = fib2(5555)
n2
def ask_ok(prompt, retries=4, remainder='Please try again!'):
  while True:
      ok = input(prompt)
      if ok in ('y', 'ye', 'yes'):
          return True
      if ok in ('n', 'no', 'nop', 'nope'):
          return False
      retries = retries - 1
      if retires < 0:
          raise ValueError('invalid user response')
      print(remainder)
ask_ok
ask_ok(y, retries=5, remainder='Try again')
ask_ok(prompt, retries=6, remainder='try again')
ask_ok("y", retries=4, remainder='Try again')
def ask_ok(prompt, retries=5, reminder='Try again'):
  while True:
     ok = input(prompt)
     if ok in ('y', 'ye', 'yes'):
        return True
     if ok in ('n', 'no', 'nop', 'nope')
i = 5
def f(arg=i)
def f(arg=i):
   print(arg)
i = 6
f
def f(arg=i):
  print(arg)
f
f()
i=90
f()
i
f(34)
f(100)
i=888
f()
f(999)
def f(a, L[]):
def f(a, L=[]):
  L.append(a)
  return L
print(f(1))
print(f(2))
print(f(3))
f
a = f(4)
a
a = f(8)
a = f(89)
a
def f(a, L=None):
   if L is None:
      L = []
   L.append(a)
f(34)
L
a
f(90)
L
a
f(43, L=None)
L
b=f(43,L=None)
b
b=f(100)
b
def f(a, L=None):
   if L is None:
      L = []
   L.append(a)
   return L
f(35, L=None)
a=f(35, L=None)
a
a=f(38)
a
a=f(35,L=None)
a
a.append(45)
a
def test(a):
   pass
print(a)
def test(a):
  pass
class EmptyClass():
    pass
  def __init__(self, name, degree, gpa):
class emp():
  pass
  def __init__(self, name, age):
  self.name = name
class emp():
    pass
    def __init__(self, name, age):
        self.name = name
        self.age = age
    def check_age(self):
        if self.age <= 35:
           return True
        else:
           return False
emp
check_age
emp.check_age()
emp.check_age(34)
emp.check_age(self)
emp1 = emp("Mohan", 45)
emp1.name
emp1.age
emp1.check_age(30)
emp1.check_age()
emp1
emp1.*
emp1.age
emp2 = emp("Jonathan", 88)
emp2.check_age()
emp2.age
emp2.age = 32
emp2.check_age()
a = 1, 2, 3, 4, 5]
a = [1,2,3,5,6]
a.sort()
a
b = [2, 4, 1, 8]
b.sort()
b
b[0]
b[2]+1
b.count()
b.list.count()
b.list()
exit
L=[-2,-3,0,1,3,4,5,6]
L.index()
L.count()
L.find()
L
L.sort()
L
L.max()
L.list()
L.list
L
for l in L:
   if l >= 1:
     print(l)
for l in L:
   if l > 1:
     print(l)
     c = l+1
     print(c)
for l in L:
  if l > 1:
    print(l)
    c = l+1
    print(c)
    break
for l in L:
  if l > 1:
    c = l+1
    break
  L.append(c)
L
L=[-2,-1,0,1,3,4]
for l in L:
   if l < 0 or l == 1:
     print(l)
L1=[]
for l in L:
 if l < 0 or l == 1:
    continue:
for l in L:
  if l < 0 or l == 1:
    continue
  else:
    L1.append(l)
L1
min(L1)+2
L1.append(min(L1)+2)
L1
L1.sort()
L1
L
L+min(L1)+2
L + min(L1) + 2
L.append(min(L1)+2)
L
L.sort()
L
n = 3
if n is not in L:
if n not in L:
  L.append(n)
L
max(L)
for n in max(L):
  if n not in L:
    L.append(n)
L
unique
uni
L.list
L.list()
list.L
list
L
for l in L:
    l
c1 =
int c1
c1 = ""
c2 = c1
for l in L:
   if l < 0 or l == 1:
      continue
   else:
      c1 = l
      print(c1)
      break
L
for l in L:
   if l <= 0 or l == 1:
      continue
   else:
      c1 = 1
      print(c1)
      break
for l in L:
    if l <= 0 or l == 1:
       continue
    else:
       c1 = l
       print(c1)
       break
for l in L:
    if l <= 0 or l == 1:
       continue
    else:
       c1
for l in L:
   if l <= 0 or l == 1:
      continue
   else:
      l
l1 = []
for l in L:
    if l <= 0 or l == 1:
       continue
    else:
       l.append()
len(L)
if len(l) <= 2:
   print("Length greater than 2")
if len(L) >= 2:
   print("Length greater than 2")
L
list(range(1,2,3,4))
range(1,2,3)
list(range(1,10))
L1=[1,3,5]
L.sort()
L
L1
len(L1)
L1[1]+1
L1[0]+1
L2=[2,2,3,3,4]
L2.sort()
L2
L2-min=min(L2)
min(L2)
max(L2)
c=2
if c not in L2:
  print("Not in the list...adding to L2")
  L2.add(c)
c=4
for l in L:
  print("Not in the list...adding to L2")
  L2.add(c)
c=5
if c is not in L2:
if c not in L2:
   print("Adding c to List")
   L2.append(c)
L2
c = 2
while c not in L2:
  L2.append(c)
  c += 1
L2
L2=[]
c=2
while c not in L2:
  L2.append(c)
  c += 1
L2
pwd
L2=[]
L2
L2.add(1)
L2.apend(1)
L2.append(1)
L2
L2.append(3)
L2.append(5)
L2
lower.L2
min(L2)
L2.append(min(L2)+1)
L2
L2.remove(1)
L2.append(min(L2)+1)
L2
for n in range(1,30):
   if n % 2 == 0:
      print("The number is even: ", str(n))
   else:
i = 0
while i < 50:
   i += 1
   if i % 2 != 0:
      continue
   else:
      print("The number is odd: " + str(i))
a = [1, 2]
def fun(a):
  for n in a:
      print(a)
def fun(a):
    for n in a:
       print(a)
fun(a)
a
pass
def fun(num):
   for n in num:
     print(n)
fun
fun(a)
a.append(54)
fun(a)
pass
def func(num):
  for n in num:
      for n >=10:
def func(num):
   for n in num:
       if n >= 10:
          continue
       else:
          print(n)
func(a)
a.append(-3)
a
a.append(4)
a
func(a)
pass
def funa(array):
    for n in array:
        if n >= 10 or n <= 0:
           continue
        else:
           print(n)
funa(a)
a.append(-40)
a
min(funa(a))
funa(a)
min(1,2)
min(funa(a))
b = funa(a)
b
min(funa(a))
print(min(funa(a))
print(a)
print(funa(a))
print(str(funa(a)))
funa(a)
a
funa(a)
funa(a).index[0]
funa(a)
min(funa(a)
)
pass
def funb(a):
pass
def funb(name):
   for n in name:
      if n >= 10 or n <= 0:
         continue
      else:
         return n
funb(a)
a
pass
def funb(name):
    a1 = []
    for n in name:
        if n >= 10 or n <=0:
           continue
        else:
           a1.append(n)
    return n
funb(a)
def funb(name):
    a1 = []
    for n in mame:
        if n >= 10 or n <= 0:
           continue
        else:
           a1.append(n)
    return a1
funb(a)
def funb(name):
   a1 = []
   for n in name:
       oif n >= 10 or n <= 0:
pass
def funb(name):
  a1 = []
  for n in name:
      if n >= 10 or n <= 0:
         continue
      else:
         a1.append(n)
  return a1
funb
funb(a)
a
min(funb(a))
funb(a)
a.append(56)
a
for n in range(1,100):
   a.append(n)
a
funb(a)
for n in rane(-45):
  a.append(n)
for n in range(-555, -444):
   a.append(n)
a
funb(a)
min(funb(a))
exit
quit
